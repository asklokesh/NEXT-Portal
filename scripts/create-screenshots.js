#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

// Create a minimal PNG placeholder
function createPlaceholderPNG() {
 // 1x1 blue PNG
 return Buffer.from([
 0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,
 0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01,
 0x08, 0x02, 0x00, 0x00, 0x00, 0x90, 0x77, 0x53,
 0xde, 0x00, 0x00, 0x00, 0x0c, 0x49, 0x44, 0x41,
 0x54, 0x08, 0xd7, 0x63, 0x60, 0x60, 0xf8, 0x0f,
 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x1b, 0xb6,
 0xee, 0x56, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45,
 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
 ]);
}

const screenshotsDir = path.join(__dirname, '../public/screenshots');

// Ensure directory exists
if (!fs.existsSync(screenshotsDir)) {
 fs.mkdirSync(screenshotsDir, { recursive: true });
}

// Create placeholder screenshots
const screenshots = ['dashboard.png', 'catalog.png', 'templates.png'];
const pngData = createPlaceholderPNG();

screenshots.forEach(filename => {
 fs.writeFileSync(path.join(screenshotsDir, filename), pngData);
 console.log(`Created placeholder ${filename}`);
});

console.log('Screenshot placeholders created successfully');