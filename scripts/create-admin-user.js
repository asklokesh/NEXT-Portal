const { PrismaClient } = require('@prisma/client'); const bcrypt = require('bcryptjs'); const prisma = new PrismaClient(); async function createAdminUser() { try { // Check if admin user already exists const existingAdmin = await prisma.user.findFirst({ where: { role: 'ADMIN' } }); if (existingAdmin) { console.log('Admin user already exists:', existingAdmin.email); return; } // Create admin user const hashedPassword = await bcrypt.hash('admin123', 12); const adminUser = await prisma.user.create({ data: { email: 'admin@company.com', name: 'Admin User', username: 'admin', password: hashedPassword, provider: 'local', providerId: 'local_admin', role: 'ADMIN', isActive: true, } }); console.log(' Admin user created successfully!'); console.log('Email: admin@company.com'); console.log('Password: admin123'); console.log('Role: ADMIN'); console.log(); console.log('You can now sign in with these credentials or use GitHub OAuth.'); } catch (error) { console.error(' Error creating admin user:', error); } finally { await prisma.$disconnect(); } } createAdminUser();