# Backstage Authentication Configuration
# Copy this file to .env.local and configure the values

# Backstage Backend Configuration
BACKSTAGE_BACKEND_URL=http://localhost:7007
BACKSTAGE_API_URL=http://localhost:7007
BACKSTAGE_API_TOKEN=your-backstage-service-token

# Authentication Secrets
AUTH_JWT_SECRET=your-jwt-secret-here
AUTH_SESSION_SECRET=your-session-secret-here
AUTH_TOKEN_EXPIRATION=1h

# Backstage OAuth Configuration (optional)
BACKSTAGE_OAUTH_CLIENT_ID=your-backstage-oauth-client-id
BACKSTAGE_OAUTH_CLIENT_SECRET=your-backstage-oauth-client-secret

# GitHub OAuth (for Backstage integration)
AUTH_GITHUB_CLIENT_ID=your-github-client-id
AUTH_GITHUB_CLIENT_SECRET=your-github-client-secret
GITHUB_TOKEN=your-github-token

# Microsoft Azure AD OAuth (optional)
AUTH_MICROSOFT_CLIENT_ID=your-microsoft-client-id
AUTH_MICROSOFT_CLIENT_SECRET=your-microsoft-client-secret
AUTH_MICROSOFT_TENANT_ID=your-microsoft-tenant-id

# Google OAuth (optional)
AUTH_GOOGLE_CLIENT_ID=your-google-client-id
AUTH_GOOGLE_CLIENT_SECRET=your-google-client-secret

# Security Configuration
BACKSTAGE_AUTH_SECRET=shared-secret-with-backstage-backend
BACKSTAGE_TRUSTED_ISSUERS=http://localhost:7007,https://your-backstage.com
BACKSTAGE_REQUIRED_SCOPES=profile,email

# Database Configuration (for user management)
DATABASE_URL=postgresql://postgres:password@localhost:5432/saas_idp
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_USER=postgres
POSTGRES_PASSWORD=password
POSTGRES_DB=saas_idp

# Redis Configuration (for sessions)
REDIS_URL=redis://localhost:6379

# Application Configuration
NEXT_PUBLIC_BASE_URL=http://localhost:3000
NEXT_PUBLIC_BACKSTAGE_URL=http://localhost:7007
JWT_SECRET=your-app-jwt-secret
NODE_ENV=development