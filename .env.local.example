# ================================
# SAAS IDP - Environment Configuration
# ================================
# Copy this file to .env.local and fill in the values
# Never commit .env.local to version control

# ================================
# APPLICATION CONFIGURATION
# ================================

# Application Environment
NODE_ENV=development

# Application URL - REQUIRED for OAuth callbacks
# Development: http://localhost:4400
# Production: https://your-domain.com
NEXT_PUBLIC_APP_URL=http://localhost:4400

# Application Port (default: 4400)
PORT=4400

# ================================
# DATABASE CONFIGURATION
# ================================

# Primary Database URL - PostgreSQL recommended for production
# Development example: postgresql://postgres:postgres@localhost:5432/idp_wrapper
# Production: Use managed database service URL
DATABASE_URL=postgresql://postgres:postgres@localhost:5432/idp_wrapper

# ================================
# REDIS CONFIGURATION (for sessions)
# ================================

# Redis URL for session storage and caching
# Development: redis://localhost:6379
# Production: Use managed Redis service URL
REDIS_URL=redis://localhost:6379

# Redis Session Configuration
SESSION_REDIS_HOST=localhost
SESSION_REDIS_PORT=6379
SESSION_REDIS_PASSWORD=
SESSION_REDIS_DB=0

# ================================
# OAUTH CONFIGURATION - GITHUB
# ================================

# GitHub OAuth Application Settings
# Create a GitHub OAuth App at: https://github.com/settings/developers
# Authorization callback URL: {NEXT_PUBLIC_APP_URL}/api/auth/github/callback
GITHUB_CLIENT_ID=your_github_client_id_here
GITHUB_CLIENT_SECRET=your_github_client_secret_here

# GitHub Admin Configuration
# Comma-separated list of GitHub usernames that should have admin access
GITHUB_ADMIN_USERS=admin_user1,admin_user2

# Comma-separated list of GitHub organizations whose members get admin access
GITHUB_ADMIN_ORGS=your-org,another-org

# GitHub Token for API access (optional, for enhanced features)
GITHUB_TOKEN=your_github_personal_access_token_here

# ================================
# OAUTH CONFIGURATION - GOOGLE
# ================================

# Google OAuth Application Settings
# Create a Google OAuth App at: https://console.cloud.google.com/apis/credentials
# Authorized redirect URIs: {NEXT_PUBLIC_APP_URL}/api/auth/google/callback
GOOGLE_CLIENT_ID=your_google_client_id_here
GOOGLE_CLIENT_SECRET=your_google_client_secret_here

# Google Admin Configuration
# Comma-separated list of email addresses that should have admin access
GOOGLE_ADMIN_EMAILS=admin@company.com,admin2@company.com

# Comma-separated list of Google Workspace domains whose users get platform engineer access
# Example: company.com,subsidiary.com
GOOGLE_ADMIN_DOMAINS=company.com

# ================================
# JWT & SESSION CONFIGURATION
# ================================

# JWT Secret for token signing - GENERATE A STRONG RANDOM STRING
# You can generate one using: openssl rand -base64 32
JWT_SECRET=your_super_secret_jwt_key_here_make_it_long_and_random

# JWT Token Expiry (in seconds)
# Default: 3600 (1 hour)
JWT_EXPIRES_IN=3600

# Refresh Token Expiry (in seconds)
# Default: 604800 (7 days)
JWT_REFRESH_EXPIRES_IN=604800

# Session Secret for cookie signing
SESSION_SECRET=your_session_secret_here_also_make_it_random

# ================================
# BACKSTAGE INTEGRATION
# ================================

# Path to your local Backstage installation
BACKSTAGE_ROOT=./backstage

# Backstage Backend URL
# Development: http://localhost:7007
# Production: https://your-backstage-backend.com
BACKSTAGE_BACKEND_URL=http://localhost:7007

# Backstage Frontend URL
# Development: http://localhost:3000
# Production: https://your-backstage-frontend.com
BACKSTAGE_FRONTEND_URL=http://localhost:3000

# Port Configuration for Backstage
BACKSTAGE_FRONTEND_PORT=3000
BACKSTAGE_BACKEND_PORT=7007

# ================================
# PLUGIN MANAGEMENT CONFIGURATION
# ================================

# Enable enhanced local plugin installer
USE_ENHANCED_INSTALLER=true

# Plugin installation mode: local, docker, hybrid
PLUGIN_INSTALL_MODE=local

# Auto-restart Backstage after plugin installation
AUTO_RESTART_ENABLED=true

# Update code automatically (App.tsx, index.ts)
AUTO_UPDATE_CODE=true

# NPM Registry Configuration
NPM_REGISTRY_URL=https://registry.npmjs.org

# Feature Flags for Plugin Management
ENABLE_PEER_DEPENDENCY_INSTALL=true
ENABLE_AUTOMATIC_BUILD=true
ENABLE_CODE_GENERATION=true
ENABLE_ROUTE_UPDATES=true

# Backup Settings
CREATE_BACKUP_BEFORE_INSTALL=true
BACKUP_DIRECTORY=./backstage-backups

# Timeout Settings (in milliseconds)
NPM_INSTALL_TIMEOUT=300000
BACKSTAGE_RESTART_TIMEOUT=60000
HEALTH_CHECK_TIMEOUT=30000

# ================================
# LOGGING & MONITORING
# ================================

# Log Level: error, warn, info, debug, trace
LOG_LEVEL=debug

# Enable detailed installation logs
ENABLE_INSTALL_LOGS=true

# Enable audit logging
ENABLE_AUDIT_LOGS=true

# ================================
# SECURITY CONFIGURATION
# ================================

# CORS Origins (comma-separated)
CORS_ORIGINS=http://localhost:3000,http://localhost:4400

# API Rate Limiting
RATE_LIMIT_MAX=100
RATE_LIMIT_WINDOW=900000

# CSRF Protection
CSRF_SECRET=your_csrf_secret_here

# ================================
# OPTIONAL: THIRD-PARTY INTEGRATIONS
# ================================

# Slack Integration (optional)
SLACK_BOT_TOKEN=xoxb-your-slack-bot-token
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/your/webhook/url

# Email Configuration (optional)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-app-password

# ================================
# DEVELOPMENT ONLY SETTINGS
# ================================

# Enable development features (set to false in production)
ENABLE_DEV_FEATURES=true

# Mock external services in development
MOCK_EXTERNAL_SERVICES=true

# Skip email verification in development
SKIP_EMAIL_VERIFICATION=true

# ================================
# PRODUCTION OVERRIDES
# ================================
# Uncomment and set these for production deployments

# Force HTTPS in production
# FORCE_HTTPS=true

# Trust proxy headers (for load balancers)
# TRUST_PROXY=true

# Production database connection pool settings
# DB_POOL_MIN=2
# DB_POOL_MAX=10

# Production Redis connection pool
# REDIS_POOL_MIN=1
# REDIS_POOL_MAX=5