apiVersion: v1
kind: ConfigMap
metadata:
  name: pipeline-config
  namespace: plugin-pipeline
  labels:
    app.kubernetes.io/name: pipeline-config
    app.kubernetes.io/component: configuration
    app.kubernetes.io/part-of: plugin-pipeline
  annotations:
    plugin-pipeline/description: "Configuration for plugin pipeline orchestrator"
data:
  # Docker configuration
  docker-registry-url: "registry.hub.docker.com"
  docker-build-timeout: "600000"
  docker-max-concurrent-builds: "5"
  
  # Service mesh configuration
  service-mesh-provider: "istio"
  service-mesh-mtls-mode: "STRICT"
  service-mesh-enable-tracing: "true"
  service-mesh-enable-metrics: "true"
  
  # Monitoring configuration
  prometheus-enabled: "true"
  prometheus-scrape-interval: "30s"
  prometheus-retention-time: "7d"
  
  tracing-enabled: "true"
  tracing-provider: "jaeger"
  tracing-endpoint: "http://jaeger-collector.istio-system:14268/api/traces"
  tracing-sampling-rate: "0.1"
  
  logging-enabled: "true"
  logging-provider: "loki"
  logging-endpoint: "http://loki.monitoring:3100"
  logging-retention-days: "30"
  
  alerting-enabled: "true"
  alerting-provider: "alertmanager"
  
  # Security configuration
  security-trivy-enabled: "true"
  security-trivy-timeout: "300s"
  security-snyk-enabled: "true"
  security-clair-enabled: "false"
  
  security-threshold-critical: "0"
  security-threshold-high: "5"
  security-threshold-medium: "20"
  security-threshold-low: "50"
  
  # Registry configuration
  registry-npm-enabled: "true"
  registry-npm-url: "https://registry.npmjs.org"
  registry-docker-enabled: "true"
  registry-git-enabled: "true"
  registry-backstage-marketplace-enabled: "true"
  
  registry-cache-enabled: "true"
  registry-cache-ttl: "3600"
  registry-cache-max-size: "1073741824"
  
  registry-validation-schema: "true"
  registry-validation-security: "true"
  registry-validation-compatibility: "true"
  
  # Pipeline configuration
  pipeline-max-concurrent-installations: "10"
  pipeline-default-strategy: "rolling-update"
  pipeline-retry-max-retries: "3"
  pipeline-retry-backoff-multiplier: "2"
  pipeline-retry-max-backoff-time: "60000"
  pipeline-timeout-installation: "1800000"
  pipeline-timeout-health-check: "300000"
  pipeline-timeout-rollback: "600000"
  
  # Quality gates configuration
  quality-gate-security-threshold: "8"
  quality-gate-performance-threshold: "7"
  quality-gate-compatibility-threshold: "9"
  quality-gate-documentation-threshold: "6"
  quality-gate-testing-threshold: "8"
  
  # Compliance configuration
  compliance-frameworks: "SOC2,CIS"
  compliance-soc2-enabled: "true"
  compliance-cis-enabled: "true"
  
  # Plugin namespace configuration
  plugin-namespace-prefix: "plugin-"
  plugin-resource-quota-enabled: "true"
  plugin-network-policies-enabled: "true"
  plugin-pod-security-standards-enabled: "true"
---
apiVersion: v1
kind: Secret
metadata:
  name: pipeline-secrets
  namespace: plugin-pipeline
  labels:
    app.kubernetes.io/name: pipeline-secrets
    app.kubernetes.io/component: configuration
    app.kubernetes.io/part-of: plugin-pipeline
  annotations:
    plugin-pipeline/description: "Sensitive configuration for plugin pipeline"
type: Opaque
data:
  # Database credentials (base64 encoded)
  database-url: cG9zdGdyZXNxbDovL3BsdWdpbi1waXBlbGluZTpwYXNzd29yZEBwb3N0Z3Jlcy1zZXJ2aWNlOjU0MzIvcGx1Z2luX3BpcGVsaW5l
  
  # Redis credentials
  redis-url: cmVkaXM6Ly9yZWRpcy1zZXJ2aWNlOjYzNzkvMA==
  
  # Security scanner tokens
  snyk-token: ""
  trivy-db-token: ""
  
  # Registry credentials
  npm-token: ""
  docker-registry-username: ""
  docker-registry-password: ""
  github-token: ""
  
  # Service mesh certificates
  istio-ca-cert: ""
  istio-ca-key: ""
  
  # Monitoring credentials
  prometheus-auth-token: ""
  grafana-admin-password: ""
  jaeger-auth-token: ""
  
  # Encryption keys
  encryption-key: "YWVzLTI1Ni1nY20ta2V5LWZvci1wbHVnaW4tcGlwZWxpbmU="
  jwt-signing-key: "and0LXNpZ25pbmcta2V5LWZvci1hdXRoZW50aWNhdGlvbg=="
  
  # Webhook secrets
  webhook-secret: "d2ViaG9vay1zZWNyZXQtZm9yLXNlY3VyZS1jb21tdW5pY2F0aW9u"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pipeline-logging-config
  namespace: plugin-pipeline
  labels:
    app.kubernetes.io/name: pipeline-logging-config
    app.kubernetes.io/component: configuration
    app.kubernetes.io/part-of: plugin-pipeline
  annotations:
    plugin-pipeline/description: "Logging configuration for plugin pipeline"
data:
  fluent.conf: |
    <source>
      @type tail
      @id input_tail
      @label @mainstream
      path /var/log/plugin-pipeline/*.log
      pos_file /var/log/fluentd-plugin-pipeline.log.pos
      tag plugin-pipeline.*
      format json
      read_from_head true
    </source>
    
    <label @mainstream>
      <match plugin-pipeline.**>
        @type loki
        url "#{ENV['LOKI_ENDPOINT']}"
        tenant_id "plugin-pipeline"
        extra_labels {"namespace":"plugin-pipeline","component":"orchestrator"}
        flush_interval 10s
        flush_at_shutdown true
        buffer_chunk_limit 1m
        
        <format>
          @type json
        </format>
      </match>
    </label>
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pipeline-prometheus-config
  namespace: plugin-pipeline
  labels:
    app.kubernetes.io/name: pipeline-prometheus-config
    app.kubernetes.io/component: configuration
    app.kubernetes.io/part-of: plugin-pipeline
  annotations:
    plugin-pipeline/description: "Prometheus configuration for plugin pipeline"
data:
  prometheus.yml: |
    global:
      scrape_interval: 30s
      evaluation_interval: 30s
    
    rule_files:
      - /etc/prometheus/rules/*.yml
    
    alerting:
      alertmanagers:
        - static_configs:
            - targets:
              - alertmanager:9093
    
    scrape_configs:
      - job_name: 'plugin-pipeline-orchestrator'
        static_configs:
          - targets:
            - plugin-pipeline-orchestrator:9090
        scrape_interval: 30s
        metrics_path: /metrics
        
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - plugin-pipeline
                - plugins
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: ${1}:${2}
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pipeline-alerting-rules
  namespace: plugin-pipeline
  labels:
    app.kubernetes.io/name: pipeline-alerting-rules
    app.kubernetes.io/component: configuration
    app.kubernetes.io/part-of: plugin-pipeline
  annotations:
    plugin-pipeline/description: "Alerting rules for plugin pipeline"
data:
  plugin-pipeline-rules.yml: |
    groups:
      - name: plugin-pipeline.rules
        rules:
          - alert: PluginPipelineOrchestratorDown
            expr: up{job="plugin-pipeline-orchestrator"} == 0
            for: 1m
            labels:
              severity: critical
              component: orchestrator
            annotations:
              summary: "Plugin pipeline orchestrator is down"
              description: "Plugin pipeline orchestrator has been down for more than 1 minute."
          
          - alert: PluginInstallationFailureRate
            expr: |
              (
                rate(plugin_installation_failures_total[5m]) /
                rate(plugin_installation_attempts_total[5m])
              ) > 0.1
            for: 5m
            labels:
              severity: warning
              component: orchestrator
            annotations:
              summary: "High plugin installation failure rate"
              description: "Plugin installation failure rate is above 10% for the last 5 minutes."
          
          - alert: PluginSecurityScanFailures
            expr: increase(plugin_security_scan_failures_total[1h]) > 5
            for: 0m
            labels:
              severity: high
              component: security
            annotations:
              summary: "High number of plugin security scan failures"
              description: "More than 5 plugin security scans have failed in the last hour."
          
          - alert: PluginPipelineHighMemoryUsage
            expr: |
              (
                container_memory_working_set_bytes{pod=~"plugin-pipeline-orchestrator-.*"} /
                container_spec_memory_limit_bytes{pod=~"plugin-pipeline-orchestrator-.*"}
              ) > 0.8
            for: 10m
            labels:
              severity: warning
              component: orchestrator
            annotations:
              summary: "Plugin pipeline orchestrator high memory usage"
              description: "Plugin pipeline orchestrator memory usage is above 80% for more than 10 minutes."
          
          - alert: PluginPipelineHighCPUUsage
            expr: |
              (
                rate(container_cpu_usage_seconds_total{pod=~"plugin-pipeline-orchestrator-.*"}[5m]) /
                container_spec_cpu_quota{pod=~"plugin-pipeline-orchestrator-.*"} * 100000
              ) > 80
            for: 10m
            labels:
              severity: warning
              component: orchestrator
            annotations:
              summary: "Plugin pipeline orchestrator high CPU usage"
              description: "Plugin pipeline orchestrator CPU usage is above 80% for more than 10 minutes."
          
          - alert: PluginInstallationQueueBacklog
            expr: plugin_installation_queue_size > 20
            for: 15m
            labels:
              severity: warning
              component: orchestrator
            annotations:
              summary: "Plugin installation queue has large backlog"
              description: "Plugin installation queue has more than 20 pending installations for 15 minutes."
          
          - alert: PluginHealthCheckFailures
            expr: |
              (
                rate(plugin_health_check_failures_total[10m]) /
                rate(plugin_health_checks_total[10m])
              ) > 0.2
            for: 5m
            labels:
              severity: warning
              component: monitoring
            annotations:
              summary: "High plugin health check failure rate"
              description: "Plugin health check failure rate is above 20% for the last 10 minutes."