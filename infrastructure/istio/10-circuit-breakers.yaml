apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: backstage-circuit-breakers
  namespace: developer-portal
spec:
  host: "*.developer-portal.svc.cluster.local"
  trafficPolicy:
    # Global circuit breaker settings
    outlierDetection:
      # Number of errors before a host is ejected
      consecutive5xxErrors: 5
      consecutiveGatewayErrors: 5
      # Time interval for ejection analysis
      interval: 30s
      # Minimum ejection duration
      baseEjectionTime: 30s
      # Maximum ejection percentage
      maxEjectionPercent: 50
      # Minimum healthy upstream hosts in load balancing pool
      minHealthPercent: 50
      # Split external and local origin errors
      splitExternalLocalOriginErrors: false
    # Connection pool settings for circuit breaking
    connectionPool:
      tcp:
        maxConnections: 100
        connectTimeout: 30s
        keepAlive:
          time: 7200s
          interval: 75s
          probes: 9
      http:
        http1MaxPendingRequests: 100
        http2MaxRequests: 1000
        maxRequestsPerConnection: 10
        maxRetries: 3
        idleTimeout: 90s
        h2UpgradePolicy: UPGRADE
---
# Backend-specific circuit breakers
apiVersion: networking.istio.io/v1beta1  
kind: DestinationRule
metadata:
  name: backstage-backend-circuit-breaker
  namespace: developer-portal
spec:
  host: backstage-backend.developer-portal.svc.cluster.local
  trafficPolicy:
    # Strict circuit breaker for backend services
    outlierDetection:
      consecutive5xxErrors: 3
      consecutiveGatewayErrors: 3
      interval: 20s
      baseEjectionTime: 30s
      maxEjectionPercent: 30
      minHealthPercent: 70
    connectionPool:
      tcp:
        maxConnections: 50
        connectTimeout: 10s
      http:
        http1MaxPendingRequests: 50
        http2MaxRequests: 500
        maxRequestsPerConnection: 5
        maxRetries: 2
        idleTimeout: 60s
  subsets:
  - name: stable
    labels:
      version: stable
    trafficPolicy:
      outlierDetection:
        consecutive5xxErrors: 5
        interval: 30s
        baseEjectionTime: 30s
        maxEjectionPercent: 20
  - name: canary
    labels:
      version: canary
    trafficPolicy:
      # More aggressive circuit breaking for canary
      outlierDetection:
        consecutive5xxErrors: 2
        consecutiveGatewayErrors: 2
        interval: 15s
        baseEjectionTime: 20s
        maxEjectionPercent: 50
        minHealthPercent: 50
      connectionPool:
        tcp:
          maxConnections: 20
        http:
          http1MaxPendingRequests: 20
          http2MaxRequests: 200
---
# Database circuit breakers
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: postgres-circuit-breaker
  namespace: developer-portal
spec:
  host: postgres.developer-portal.svc.cluster.local
  trafficPolicy:
    # Conservative circuit breaker for database
    outlierDetection:
      consecutive5xxErrors: 2
      consecutiveGatewayErrors: 2
      interval: 60s
      baseEjectionTime: 60s
      maxEjectionPercent: 10
      minHealthPercent: 90
    connectionPool:
      tcp:
        maxConnections: 30
        connectTimeout: 5s
        keepAlive:
          time: 300s
          interval: 60s
      http:
        http1MaxPendingRequests: 10
        http2MaxRequests: 100
        maxRequestsPerConnection: 2
        maxRetries: 1
        idleTimeout: 300s
---
# Redis circuit breakers
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: redis-circuit-breaker
  namespace: developer-portal
spec:
  host: redis.developer-portal.svc.cluster.local
  trafficPolicy:
    outlierDetection:
      consecutive5xxErrors: 3
      consecutiveGatewayErrors: 3
      interval: 30s
      baseEjectionTime: 30s
      maxEjectionPercent: 25
      minHealthPercent: 75
    connectionPool:
      tcp:
        maxConnections: 20
        connectTimeout: 2s
        keepAlive:
          time: 600s
          interval: 60s
---
# External service circuit breakers
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: external-apis-circuit-breaker
  namespace: developer-portal
spec:
  host: "*.external"
  trafficPolicy:
    # Aggressive circuit breaking for external services
    outlierDetection:
      consecutive5xxErrors: 3
      consecutiveGatewayErrors: 2
      interval: 30s
      baseEjectionTime: 60s
      maxEjectionPercent: 50
      minHealthPercent: 50
    connectionPool:
      tcp:
        maxConnections: 10
        connectTimeout: 5s
      http:
        http1MaxPendingRequests: 5
        http2MaxRequests: 50
        maxRequestsPerConnection: 1
        maxRetries: 2
        idleTimeout: 30s
---
# GitHub API specific circuit breaker
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: github-api-circuit-breaker
  namespace: developer-portal
spec:
  host: api.github.com
  trafficPolicy:
    outlierDetection:
      consecutive5xxErrors: 5
      consecutiveGatewayErrors: 3
      interval: 60s
      baseEjectionTime: 120s
      maxEjectionPercent: 30
      minHealthPercent: 70
    connectionPool:
      tcp:
        maxConnections: 15
        connectTimeout: 10s
      http:
        http1MaxPendingRequests: 10
        http2MaxRequests: 100
        maxRequestsPerConnection: 2
        maxRetries: 3
        idleTimeout: 60s
---
# Backstage plugin marketplace circuit breaker
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: marketplace-circuit-breaker
  namespace: developer-portal
spec:
  host: backstage-marketplace.developer-portal.svc.cluster.local
  trafficPolicy:
    outlierDetection:
      consecutive5xxErrors: 3
      consecutiveGatewayErrors: 3
      interval: 30s
      baseEjectionTime: 45s
      maxEjectionPercent: 40
      minHealthPercent: 60
    connectionPool:
      tcp:
        maxConnections: 40
        connectTimeout: 15s
      http:
        http1MaxPendingRequests: 40
        http2MaxRequests: 400
        maxRequestsPerConnection: 8
        maxRetries: 2
        idleTimeout: 90s
---
# WebSocket service circuit breaker
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: websocket-circuit-breaker
  namespace: developer-portal
spec:
  host: backstage-websocket.developer-portal.svc.cluster.local
  trafficPolicy:
    outlierDetection:
      consecutive5xxErrors: 5
      consecutiveGatewayErrors: 5
      interval: 60s
      baseEjectionTime: 60s
      maxEjectionPercent: 20
      minHealthPercent: 80
    connectionPool:
      tcp:
        maxConnections: 100
        connectTimeout: 10s
        keepAlive:
          time: 3600s
          interval: 300s
      http:
        http1MaxPendingRequests: 100
        http2MaxRequests: 1000
        maxRequestsPerConnection: 1
        idleTimeout: 3600s
---
# Circuit breaker monitoring
apiVersion: v1
kind: ConfigMap
metadata:
  name: circuit-breaker-dashboard
  namespace: developer-portal
  labels:
    grafana_dashboard: "1"
data:
  circuit-breaker-dashboard.json: |
    {
      "dashboard": {
        "id": null,
        "title": "Istio Circuit Breaker Dashboard",
        "tags": ["istio", "circuit-breaker", "resilience"],
        "style": "dark",
        "timezone": "browser",
        "panels": [
          {
            "id": 1,
            "title": "Circuit Breaker Status",
            "type": "stat",
            "targets": [
              {
                "expr": "sum(rate(envoy_cluster_outlier_detection_ejections_total[5m])) by (cluster_name)",
                "legendFormat": "{{ cluster_name }}"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "palette-classic"
                },
                "custom": {
                  "displayMode": "list",
                  "orientation": "horizontal"
                },
                "mappings": [],
                "thresholds": {
                  "steps": [
                    {
                      "color": "green",
                      "value": null
                    },
                    {
                      "color": "red",
                      "value": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 2,
            "title": "Connection Pool Utilization",
            "type": "timeseries",
            "targets": [
              {
                "expr": "envoy_cluster_upstream_cx_active / envoy_cluster_upstream_cx_max",
                "legendFormat": "{{ cluster_name }}"
              }
            ]
          },
          {
            "id": 3,
            "title": "Pending Requests",
            "type": "timeseries", 
            "targets": [
              {
                "expr": "envoy_cluster_upstream_rq_pending_active",
                "legendFormat": "{{ cluster_name }}"
              }
            ]
          },
          {
            "id": 4,
            "title": "Outlier Detection Events",
            "type": "timeseries",
            "targets": [
              {
                "expr": "rate(envoy_cluster_outlier_detection_ejections_total[5m])",
                "legendFormat": "Ejections - {{ cluster_name }}"
              }
            ]
          }
        ],
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "refresh": "30s"
      }
    }