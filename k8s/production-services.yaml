apiVersion: v1
kind: ServiceAccount
metadata:
  name: saas-idp-service-account
  namespace: saas-idp-production
  labels:
    app: saas-idp
    environment: production
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT:role/saas-idp-pod-role
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: saas-idp-role
  namespace: saas-idp-production
rules:
- apiGroups: [""]
  resources: ["secrets", "configmaps"]
  verbs: ["get", "list"]
- apiGroups: [""]
  resources: ["pods", "services"]
  verbs: ["get", "list"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: saas-idp-rolebinding
  namespace: saas-idp-production
subjects:
- kind: ServiceAccount
  name: saas-idp-service-account
  namespace: saas-idp-production
roleRef:
  kind: Role
  name: saas-idp-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  name: saas-idp-app
  namespace: saas-idp-production
  labels:
    app: saas-idp
    component: app
    environment: production
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/api/metrics"
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
spec:
  type: ClusterIP
  selector:
    app: saas-idp
    component: app
  ports:
  - name: http
    port: 4400
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: metrics
    protocol: TCP
  sessionAffinity: None
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-proxy
  namespace: saas-idp-production
  labels:
    app: saas-idp
    component: nginx
    environment: production
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:acm:region:account:certificate/cert-id"
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
spec:
  type: LoadBalancer
  selector:
    app: saas-idp
    component: nginx
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  - name: https
    port: 443
    targetPort: https
    protocol: TCP
  externalTrafficPolicy: Local
  loadBalancerSourceRanges:
  - 0.0.0.0/0
---
apiVersion: v1
kind: Service
metadata:
  name: saas-idp-headless
  namespace: saas-idp-production
  labels:
    app: saas-idp
    component: app
    environment: production
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app: saas-idp
    component: app
  ports:
  - name: http
    port: 4400
    targetPort: http
    protocol: TCP
---
# Service Monitor for Prometheus
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: saas-idp-metrics
  namespace: saas-idp-production
  labels:
    app: saas-idp
    component: monitoring
    environment: production
spec:
  selector:
    matchLabels:
      app: saas-idp
      component: app
  endpoints:
  - port: metrics
    interval: 30s
    path: /api/metrics
    honorLabels: true
  - port: metrics
    interval: 30s
    path: /api/health/metrics
    honorLabels: true
  namespaceSelector:
    matchNames:
    - saas-idp-production
---
# Network Policy for Services
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-nginx-to-app
  namespace: saas-idp-production
spec:
  podSelector:
    matchLabels:
      app: saas-idp
      component: app
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: saas-idp
          component: nginx
    ports:
    - protocol: TCP
      port: 4400
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-external-to-nginx
  namespace: saas-idp-production
spec:
  podSelector:
    matchLabels:
      app: saas-idp
      component: nginx
  policyTypes:
  - Ingress
  ingress:
  - ports:
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 443
---
# Pod Disruption Budget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: saas-idp-app-pdb
  namespace: saas-idp-production
  labels:
    app: saas-idp
    component: app
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: saas-idp
      component: app
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: nginx-proxy-pdb
  namespace: saas-idp-production
  labels:
    app: saas-idp
    component: nginx
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: saas-idp
      component: nginx