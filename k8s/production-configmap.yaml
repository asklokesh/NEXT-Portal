apiVersion: v1
kind: ConfigMap
metadata:
  name: saas-idp-config
  namespace: saas-idp-production
  labels:
    app: saas-idp
    environment: production
data:
  NODE_ENV: "production"
  PORT: "4400"
  HOST: "0.0.0.0"
  
  # Database Configuration
  POSTGRES_HOST: "postgresql-primary.saas-idp-production.svc.cluster.local"
  POSTGRES_PORT: "5432"
  POSTGRES_DB: "saas_idp_production"
  POSTGRES_USER: "saas_idp_user"
  
  # Redis Configuration
  REDIS_HOST: "redis-master.saas-idp-production.svc.cluster.local"
  REDIS_PORT: "6379"
  REDIS_TLS: "false"
  
  # Backstage Integration
  BACKSTAGE_BACKEND_URL: "http://backstage-backend.backstage.svc.cluster.local:7007"
  BACKSTAGE_FRONTEND_URL: "http://backstage-frontend.backstage.svc.cluster.local:3000"
  
  # External Services
  GRAFANA_URL: "http://grafana.monitoring.svc.cluster.local:3000"
  PROMETHEUS_URL: "http://prometheus.monitoring.svc.cluster.local:9090"
  ELASTICSEARCH_URL: "http://elasticsearch.elastic-system.svc.cluster.local:9200"
  
  # Security Configuration
  FORCE_HTTPS: "true"
  RATE_LIMIT_ENABLED: "true"
  
  # Feature Flags
  FEATURE_PLUGINS_ENABLED: "true"
  FEATURE_MONITORING_ENABLED: "true"
  FEATURE_ANALYTICS_ENABLED: "true"
  FEATURE_NOTIFICATIONS_ENABLED: "true"
  
  # Logging & Monitoring
  LOG_LEVEL: "info"
  
  # Performance Configuration
  MAX_REQUEST_SIZE: "10485760"
  REQUEST_TIMEOUT: "30000"
  CACHE_TTL: "300"
  
  # Production Settings
  DEBUG: "false"
  MOCK_EXTERNAL_SERVICES: "false"
  ENABLE_SECRETS_MANAGER: "true"
  
  # Health Check
  HEALTH_CHECK_PATH: "/api/health"
  HEALTH_CHECK_ENABLED: "true"
  
  # Cache Configuration
  CACHE_ENABLED: "true"
  CACHE_PROVIDER: "redis"
  CACHE_DEFAULT_TTL: "300"
  
  # Monitoring Configuration
  METRICS_ENABLED: "true"
  METRICS_PORT: "9090"
  TRACING_ENABLED: "true"
  TRACING_SAMPLE_RATE: "0.1"
  
  # Rate Limiting Configuration
  RATE_LIMIT_WINDOW_MS: "60000"
  RATE_LIMIT_MAX_REQUESTS: "100"
  
  # Backup Configuration
  BACKUP_ENABLED: "true"
  BACKUP_RETENTION_DAYS: "30"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: saas-idp-production
  labels:
    app: saas-idp
    component: nginx
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;

    events {
        worker_connections 4096;
        use epoll;
        multi_accept on;
    }

    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        # Logging format
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for" '
                        'rt=$request_time uct="$upstream_connect_time" '
                        'uht="$upstream_header_time" urt="$upstream_response_time"';

        access_log /var/log/nginx/access.log main;

        # Basic Settings
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        server_tokens off;

        # Gzip Settings
        gzip on;
        gzip_vary on;
        gzip_min_length 10240;
        gzip_proxied expired no-cache no-store private must-revalidate auth;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/javascript
            application/xml+rss
            application/json;

        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;

        # Security headers
        add_header X-Frame-Options SAMEORIGIN always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

        upstream saas-idp-backend {
            least_conn;
            server saas-idp-app:4400 max_fails=3 fail_timeout=30s;
            keepalive 32;
        }

        server {
            listen 80;
            server_name _;
            return 301 https://$host$request_uri;
        }

        server {
            listen 443 ssl http2;
            server_name _;

            # SSL Configuration
            ssl_certificate /etc/nginx/ssl/tls.crt;
            ssl_certificate_key /etc/nginx/ssl/tls.key;
            ssl_protocols TLSv1.2 TLSv1.3;
            ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4;
            ssl_prefer_server_ciphers on;
            ssl_session_cache shared:SSL:10m;
            ssl_session_timeout 10m;

            # Client max body size
            client_max_body_size 10M;

            # Compression
            location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }

            # API routes with rate limiting
            location /api/ {
                limit_req zone=api burst=20 nodelay;
                proxy_pass http://saas-idp-backend;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_cache_bypass $http_upgrade;
                proxy_read_timeout 300;
                proxy_connect_timeout 300;
            }

            # Auth routes with stricter rate limiting
            location /api/auth/ {
                limit_req zone=login burst=5 nodelay;
                proxy_pass http://saas-idp-backend;
                proxy_http_version 1.1;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_read_timeout 60;
                proxy_connect_timeout 60;
            }

            # WebSocket support
            location /ws/ {
                proxy_pass http://saas-idp-backend;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_read_timeout 86400;
            }

            # Health check endpoint
            location /health {
                proxy_pass http://saas-idp-backend/api/health;
                proxy_http_version 1.1;
                proxy_set_header Host $host;
                access_log off;
            }

            # All other routes
            location / {
                proxy_pass http://saas-idp-backend;
                proxy_http_version 1.1;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_read_timeout 300;
                proxy_connect_timeout 300;
            }
        }
    }