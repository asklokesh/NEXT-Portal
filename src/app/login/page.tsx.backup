'use client';
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/consistent-type-imports, import/order, @typescript-eslint/no-misused-promises, @typescript-eslint/no-floating-promises, @typescript-eslint/require-await, react-hooks/exhaustive-deps, jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions, jsx-a11y/interactive-supports-focus, jsx-a11y/role-supports-aria-props, jsx-a11y/no-autofocus, import/no-named-as-default-member, no-console, no-dupe-else-if, no-return-await, import/no-self-import */

import { motion } from 'framer-motion';
import { Zap, Mail, Lock, Github, AlertCircle, Package, Activity } from 'lucide-react';
import Link from 'next/link';
import { useRouter } from 'next/navigation';
import React, { useState } from 'react';
import { toast } from 'react-hot-toast';

const LoginPage = () => {
 const router = useRouter();
 const [email, setEmail] = useState('');
 const [password, setPassword] = useState('');
 const [loading, setLoading] = useState(false);
 const [error, setError] = useState('');
 const [oauthLoading, setOauthLoading] = useState<string | null>(null);

 const handleSubmit = async (e: React.FormEvent) => {
 e.preventDefault();
 setError('');
 setLoading(true);

 try {
 const response = await fetch('/api/auth/login', {
 method: 'POST',
 headers: {
 'Content-Type': 'application/json',
 },
 body: JSON.stringify({
 email,
 password,
 rememberMe: false,
 }),
 });

 const data = await response.json();

 if (response.ok && data.success) {
 toast.success('Welcome back!');
 router.push('/dashboard');
 } else {
 setError(data.error || 'Invalid email or password');
 }
 } catch (err) {
 setError('An error occurred. Please try again.');
 } finally {
 setLoading(false);
 }
 };

 const handleSSOLogin = (provider: string) => {
 if (provider === 'GitHub') {
 // Redirect to GitHub OAuth
 window.location.href = '/api/auth/github';
 } else if (provider === 'Google') {
 // Redirect to Google OAuth endpoint
 window.location.href = '/api/auth/google';
 } else {
 toast.error(`${provider} authentication not configured`);
 }
 };

 return (
 <div className="min-h-screen flex">
 {/* Left side - Login form */}
 <div className="flex-1 flex flex-col justify-center px-4 sm:px-6 lg:px-20 xl:px-24">
 <motion.div
 initial={{ opacity: 0, y: 20 }}
 animate={{ opacity: 1, y: 0 }}
 transition={{ duration: 0.5 }}
 className="mx-auto w-full max-w-sm"
 >
 {/* Logo */}
 <div className="text-center">
 <Link href="/" className="inline-flex items-center gap-2">
 <Zap className="h-12 w-12 text-blue-600" />
 <span className="text-3xl font-bold text-gray-900 dark:text-gray-100">
 IDP Platform
 </span>
 </Link>
 <h2 className="mt-6 text-2xl font-bold text-gray-900 dark:text-gray-100">
 Welcome back
 </h2>
 <p className="mt-2 text-sm text-gray-600 dark:text-gray-400">
 Sign in to access your developer platform
 </p>
 </div>

 {/* Authentication Info */}
 <div className="mt-6 bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-4">
 <div className="flex">
 <div className="flex-shrink-0">
 <AlertCircle className="h-5 w-5 text-blue-600 dark:text-blue-400" />
 </div>
 <div className="ml-3">
 <h3 className="text-sm font-medium text-blue-800 dark:text-blue-200">
 Authentication Options
 </h3>
 <div className="mt-2 text-sm text-blue-700 dark:text-blue-300">
 <p>Sign in with GitHub for full admin access</p>
 <p>Or use your local account credentials</p>
 </div>
 </div>
 </div>
 </div>

 {/* Login form */}
 <form onSubmit={handleSubmit} className="mt-8 space-y-6">
 {error && (
 <motion.div
 initial={{ opacity: 0, y: -10 }}
 animate={{ opacity: 1, y: 0 }}
 className="bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg p-4"
 >
 <p className="text-sm text-red-800 dark:text-red-200">{error}</p>
 </motion.div>
 )}

 <div className="space-y-4">
 <div>
 <label htmlFor="email" className="block text-sm font-medium text-gray-700 dark:text-gray-300">
 Email address
 </label>
 <div className="mt-1 relative">
 <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
 <Mail className="h-5 w-5 text-gray-400" />
 </div>
 <input
 id="email"
 name="email"
 type="email"
 autoComplete="email"
 required
 value={email}
 onChange={(e) => setEmail(e.target.value)}
 className="appearance-none block w-full pl-10 pr-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-gray-100 sm:text-sm"
 placeholder="you@company.com"
 />
 </div>
 </div>

 <div>
 <label htmlFor="password" className="block text-sm font-medium text-gray-700 dark:text-gray-300">
 Password
 </label>
 <div className="mt-1 relative">
 <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
 <Lock className="h-5 w-5 text-gray-400" />
 </div>
 <input
 id="password"
 name="password"
 type="password"
 autoComplete="current-password"
 required
 value={password}
 onChange={(e) => setPassword(e.target.value)}
 className="appearance-none block w-full pl-10 pr-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-gray-100 sm:text-sm"
 placeholder="Enter your password"
 />
 </div>
 </div>
 </div>

 <div className="flex items-center justify-between">
 <div className="flex items-center">
 <input
 id="remember-me"
 name="remember-me"
 type="checkbox"
 className="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
 />
 <label htmlFor="remember-me" className="ml-2 block text-sm text-gray-700 dark:text-gray-300">
 Remember me
 </label>
 </div>

 <div className="text-sm">
 <button type="button" className="font-medium text-blue-600 hover:text-blue-500 dark:text-blue-400 dark:hover:text-blue-300">
 Forgot your password?
 </button>
 </div>
 </div>

 <div>
 <button
 type="submit"
 disabled={loading}
 className="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed"
 >
 {loading ? (
 <div className="animate-spin rounded-full h-5 w-5 border-b-2 border-white" />
 ) : (
 'Sign in'
 )}
 </button>
 </div>

 <div className="mt-6">
 <div className="relative">
 <div className="absolute inset-0 flex items-center">
 <div className="w-full border-t border-gray-300 dark:border-gray-600" />
 </div>
 <div className="relative flex justify-center text-sm">
 <span className="px-2 bg-white dark:bg-gray-900 text-gray-500">Or continue with</span>
 </div>
 </div>

 <div className="mt-6 grid grid-cols-2 gap-3">
 <button
 type="button"
 onClick={() => handleSSOLogin('GitHub')}
 className="w-full inline-flex justify-center py-2 px-4 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm bg-white dark:bg-gray-800 text-sm font-medium text-gray-500 dark:text-gray-400 hover:bg-gray-50 dark:hover:bg-gray-700"
 >
 <Github className="h-5 w-5" />
 </button>

 <button
 type="button"
 onClick={() => handleSSOLogin('Google')}
 className="w-full inline-flex justify-center py-2 px-4 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm bg-white dark:bg-gray-800 text-sm font-medium text-gray-500 dark:text-gray-400 hover:bg-gray-50 dark:hover:bg-gray-700"
 >
 <svg className="h-5 w-5" viewBox="0 0 24 24">
 <path
 fill="currentColor"
 d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"
 />
 <path
 fill="currentColor"
 d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"
 />
 <path
 fill="currentColor"
 d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"
 />
 <path
 fill="currentColor"
 d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"
 />
 </svg>
 </button>
 </div>
 </div>
 </form>
 </motion.div>
 </div>

 {/* Right side - Image/Pattern */}
 <div className="hidden lg:block relative w-0 flex-1">
 <div className="absolute inset-0 bg-gradient-to-br from-blue-600 to-purple-700">
 <div className="absolute inset-0 bg-black opacity-20" />
 <div className="absolute inset-0 flex items-center justify-center p-12">
 <div className="max-w-md text-white">
 <h3 className="text-3xl font-bold mb-4">
 Build faster with our Internal Developer Platform
 </h3>
 <p className="text-lg opacity-90 mb-8">
 Create services, deploy applications, and manage infrastructure with ease. 
 Everything you need to accelerate your development workflow.
 </p>
 <div className="space-y-4">
 <div className="flex items-center gap-3">
 <div className="w-12 h-12 rounded-full bg-white/20 flex items-center justify-center">
 <Package className="w-6 h-6" />
 </div>
 <div>
 <p className="font-semibold">Service Catalog</p>
 <p className="text-sm opacity-75">Discover and manage all your services</p>
 </div>
 </div>
 <div className="flex items-center gap-3">
 <div className="w-12 h-12 rounded-full bg-white/20 flex items-center justify-center">
 <Zap className="w-6 h-6" />
 </div>
 <div>
 <p className="font-semibold">No-Code Creation</p>
 <p className="text-sm opacity-75">Build services without writing code</p>
 </div>
 </div>
 <div className="flex items-center gap-3">
 <div className="w-12 h-12 rounded-full bg-white/20 flex items-center justify-center">
 <Activity className="w-6 h-6" />
 </div>
 <div>
 <p className="font-semibold">Real-time Monitoring</p>
 <p className="text-sm opacity-75">Track performance and health metrics</p>
 </div>
 </div>
 </div>
 </div>
 </div>
 </div>
 </div>
 </div>
 );
};

export default LoginPage;