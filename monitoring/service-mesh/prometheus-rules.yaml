apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: backstage-service-mesh-alerts
  namespace: istio-system
  labels:
    app: prometheus
    prometheus: kube-prometheus
    role: alert-rules
spec:
  groups:
  # Service Mesh Health Alerts
  - name: service-mesh-health
    rules:
    - alert: ServiceMeshHighErrorRate
      expr: |
        (
          sum(rate(istio_requests_total{destination_app="backstage",response_code!~"2.."}[5m]))
          /
          sum(rate(istio_requests_total{destination_app="backstage"}[5m]))
        ) * 100 > 5
      for: 5m
      labels:
        severity: warning
        component: service-mesh
        service: "{{ $labels.destination_service_name }}"
      annotations:
        summary: "High error rate detected in service mesh"
        description: "Service {{ $labels.destination_service_name }} has an error rate of {{ $value }}% which is above the 5% threshold."
        dashboard: "/d/service-mesh-overview"
        runbook: "https://backstage.local/docs/runbooks/service-mesh-errors"

    - alert: ServiceMeshHighLatency
      expr: |
        histogram_quantile(0.99,
          sum(rate(istio_request_duration_milliseconds_bucket{destination_app="backstage"}[5m]))
          by (destination_service_name, le)
        ) > 5000
      for: 10m
      labels:
        severity: warning
        component: service-mesh
        service: "{{ $labels.destination_service_name }}"
      annotations:
        summary: "High latency detected in service mesh"
        description: "Service {{ $labels.destination_service_name }} has P99 latency of {{ $value }}ms which is above the 5s threshold."
        dashboard: "/d/service-mesh-overview"
        runbook: "https://backstage.local/docs/runbooks/service-mesh-latency"

    - alert: ServiceMeshLowSuccessRate
      expr: |
        (
          sum(rate(istio_requests_total{destination_app="backstage",response_code=~"2.."}[10m]))
          /
          sum(rate(istio_requests_total{destination_app="backstage"}[10m]))
        ) * 100 < 95
      for: 10m
      labels:
        severity: critical
        component: service-mesh
        service: "{{ $labels.destination_service_name }}"
      annotations:
        summary: "Low success rate detected in service mesh"
        description: "Service {{ $labels.destination_service_name }} has success rate of {{ $value }}% which is below the 95% SLA threshold."
        dashboard: "/d/performance-sla-dashboard"
        runbook: "https://backstage.local/docs/runbooks/service-mesh-sla"

  # Circuit Breaker Alerts
  - name: circuit-breaker-alerts
    rules:
    - alert: CircuitBreakerOpen
      expr: |
        sum(rate(envoy_cluster_outlier_detection_ejections_total[5m])) by (cluster_name) > 0
      for: 1m
      labels:
        severity: warning
        component: circuit-breaker
        cluster: "{{ $labels.cluster_name }}"
      annotations:
        summary: "Circuit breaker opened"
        description: "Circuit breaker for cluster {{ $labels.cluster_name }} has opened due to consecutive failures."
        dashboard: "/d/service-mesh-overview"
        runbook: "https://backstage.local/docs/runbooks/circuit-breaker"

    - alert: HighConnectionPoolUtilization
      expr: |
        (envoy_cluster_upstream_cx_active / envoy_cluster_upstream_cx_max) * 100 > 80
      for: 5m
      labels:
        severity: warning
        component: connection-pool
        cluster: "{{ $labels.cluster_name }}"
      annotations:
        summary: "High connection pool utilization"
        description: "Connection pool utilization for cluster {{ $labels.cluster_name }} is {{ $value }}% which is above 80%."
        dashboard: "/d/service-mesh-overview"
        runbook: "https://backstage.local/docs/runbooks/connection-pool"

    - alert: HighPendingRequests
      expr: |
        envoy_cluster_upstream_rq_pending_active > 50
      for: 5m
      labels:
        severity: warning
        component: request-queue
        cluster: "{{ $labels.cluster_name }}"
      annotations:
        summary: "High number of pending requests"
        description: "Cluster {{ $labels.cluster_name }} has {{ $value }} pending requests which may indicate performance issues."
        dashboard: "/d/service-mesh-overview"
        runbook: "https://backstage.local/docs/runbooks/pending-requests"

  # Istio Component Health
  - name: istio-component-health
    rules:
    - alert: IstiodDown
      expr: up{job="istio-pilot"} == 0
      for: 5m
      labels:
        severity: critical
        component: istiod
      annotations:
        summary: "Istiod is down"
        description: "Istiod control plane component is not responding."
        dashboard: "/d/istio-control-plane"
        runbook: "https://backstage.local/docs/runbooks/istiod-down"

    - alert: IstioGatewayDown
      expr: up{job="istio-gateway"} == 0
      for: 5m
      labels:
        severity: critical
        component: istio-gateway
      annotations:
        summary: "Istio Gateway is down"
        description: "Istio Gateway is not responding, external traffic may be affected."
        dashboard: "/d/istio-gateways"
        runbook: "https://backstage.local/docs/runbooks/istio-gateway-down"

    - alert: IstiodHighMemoryUsage
      expr: |
        (
          container_memory_usage_bytes{container="discovery",namespace="istio-system"}
          /
          container_spec_memory_limit_bytes{container="discovery",namespace="istio-system"}
        ) * 100 > 80
      for: 15m
      labels:
        severity: warning
        component: istiod
      annotations:
        summary: "Istiod high memory usage"
        description: "Istiod memory usage is {{ $value }}% which is above 80%."
        dashboard: "/d/istio-control-plane"
        runbook: "https://backstage.local/docs/runbooks/istiod-memory"

    - alert: IstiodConfigurationRejected
      expr: |
        sum(rate(pilot_k8s_cfg_events_total{event="rejected"}[5m])) > 0
      for: 1m
      labels:
        severity: warning
        component: istiod
      annotations:
        summary: "Istio configuration rejected"
        description: "Istiod is rejecting configuration changes, check for invalid configurations."
        dashboard: "/d/istio-control-plane"
        runbook: "https://backstage.local/docs/runbooks/istio-config-rejected"

  # Certificate Management Alerts
  - name: certificate-alerts
    rules:
    - alert: CertificateExpiringWarning
      expr: |
        (x509_cert_not_after - time()) / 86400 < 30
      for: 1h
      labels:
        severity: warning
        component: certificates
        certificate: "{{ $labels.name }}"
      annotations:
        summary: "Certificate expiring soon"
        description: "Certificate {{ $labels.name }} will expire in {{ $value }} days."
        dashboard: "/d/disaster-recovery-dashboard"
        runbook: "https://backstage.local/docs/runbooks/certificate-renewal"

    - alert: CertificateExpiringCritical
      expr: |
        (x509_cert_not_after - time()) / 86400 < 7
      for: 30m
      labels:
        severity: critical
        component: certificates
        certificate: "{{ $labels.name }}"
      annotations:
        summary: "Certificate expiring very soon"
        description: "Certificate {{ $labels.name }} will expire in {{ $value }} days. Immediate action required."
        dashboard: "/d/disaster-recovery-dashboard"
        runbook: "https://backstage.local/docs/runbooks/certificate-renewal"

    - alert: CertificateRotationFailed
      expr: |
        increase(certificate_rotation_failures_total[1h]) > 0
      for: 1m
      labels:
        severity: critical
        component: certificates
      annotations:
        summary: "Certificate rotation failed"
        description: "Automatic certificate rotation has failed {{ $value }} times in the last hour."
        dashboard: "/d/disaster-recovery-dashboard"
        runbook: "https://backstage.local/docs/runbooks/certificate-rotation-failure"

  # Performance and SLA Alerts
  - name: performance-sla-alerts
    rules:
    - alert: SLABreachAvailability
      expr: |
        (
          sum(rate(istio_requests_total{destination_app="backstage",response_code=~"2.."}[1h]))
          /
          sum(rate(istio_requests_total{destination_app="backstage"}[1h]))
        ) * 100 < 99.9
      for: 5m
      labels:
        severity: critical
        component: sla
        sla_type: availability
      annotations:
        summary: "SLA breach - Availability below 99.9%"
        description: "Service availability is {{ $value }}% which is below the 99.9% SLA target."
        dashboard: "/d/performance-sla-dashboard"
        runbook: "https://backstage.local/docs/runbooks/sla-breach-availability"

    - alert: SLABreachLatency
      expr: |
        (
          sum(rate(istio_request_duration_milliseconds_bucket{destination_app="backstage",le="1000"}[1h]))
          /
          sum(rate(istio_request_duration_milliseconds_count{destination_app="backstage"}[1h]))
        ) * 100 < 95
      for: 5m
      labels:
        severity: warning
        component: sla
        sla_type: latency
      annotations:
        summary: "SLA breach - Latency above 1s for 95% requests"
        description: "{{ $value }}% of requests are served within 1s, below the 95% SLA target."
        dashboard: "/d/performance-sla-dashboard"
        runbook: "https://backstage.local/docs/runbooks/sla-breach-latency"

    - alert: ErrorBudgetExhausted
      expr: |
        100 - ((1 - (
          sum(rate(istio_requests_total{destination_app="backstage",response_code=~"2.."}[30d]))
          /
          sum(rate(istio_requests_total{destination_app="backstage"}[30d]))
        )) * 100) / 0.1 * 100 < 10
      for: 1h
      labels:
        severity: critical
        component: sla
        sla_type: error-budget
      annotations:
        summary: "Error budget nearly exhausted"
        description: "Error budget remaining is {{ $value }}% for the 30-day window."
        dashboard: "/d/performance-sla-dashboard"
        runbook: "https://backstage.local/docs/runbooks/error-budget-exhausted"

  # Disaster Recovery Alerts
  - name: disaster-recovery-alerts
    rules:
    - alert: PrimarySiteDown
      expr: up{job="backstage-primary"} == 0
      for: 2m
      labels:
        severity: critical
        component: disaster-recovery
        site: primary
      annotations:
        summary: "Primary site is down"
        description: "Primary Backstage site is not responding. Consider failover to DR site."
        dashboard: "/d/disaster-recovery-dashboard"
        runbook: "https://backstage.local/docs/runbooks/primary-site-failure"

    - alert: DRSiteNotReady
      expr: up{job="backstage-dr"} == 0
      for: 5m
      labels:
        severity: warning
        component: disaster-recovery
        site: dr
      annotations:
        summary: "DR site is not ready"
        description: "Disaster recovery site is not responding or not ready for failover."
        dashboard: "/d/disaster-recovery-dashboard"
        runbook: "https://backstage.local/docs/runbooks/dr-site-not-ready"

    - alert: DatabaseReplicationLagHigh
      expr: pg_stat_replication_replay_lag_seconds > 300
      for: 10m
      labels:
        severity: warning
        component: disaster-recovery
        database: postgresql
      annotations:
        summary: "High database replication lag"
        description: "Database replication lag is {{ $value }}s which is above 5 minutes."
        dashboard: "/d/disaster-recovery-dashboard"
        runbook: "https://backstage.local/docs/runbooks/db-replication-lag"

    - alert: BackupJobFailed
      expr: |
        time() - backstage_last_successful_backup_timestamp > 7200
      for: 1h
      labels:
        severity: critical
        component: disaster-recovery
        backup: database
      annotations:
        summary: "Backup job failed or not running"
        description: "Last successful backup was {{ $value }}s ago, exceeding 2 hour threshold."
        dashboard: "/d/disaster-recovery-dashboard"
        runbook: "https://backstage.local/docs/runbooks/backup-failure"

    - alert: CrossRegionConnectivityIssue
      expr: |
        sum(rate(istio_requests_total{source_cluster="primary",destination_cluster="dr"}[5m])) == 0
        and
        sum(rate(istio_requests_total{source_cluster="primary"}[5m])) > 0
      for: 5m
      labels:
        severity: warning
        component: disaster-recovery
        connectivity: cross-region
      annotations:
        summary: "Cross-region connectivity issue"
        description: "No traffic flowing from primary to DR region, check network connectivity."
        dashboard: "/d/disaster-recovery-dashboard"
        runbook: "https://backstage.local/docs/runbooks/cross-region-connectivity"

  # Observability Stack Alerts
  - name: observability-alerts
    rules:
    - alert: PrometheusDown
      expr: up{job="prometheus"} == 0
      for: 5m
      labels:
        severity: critical
        component: prometheus
      annotations:
        summary: "Prometheus is down"
        description: "Prometheus metrics collection is not working."
        runbook: "https://backstage.local/docs/runbooks/prometheus-down"

    - alert: JaegerDown
      expr: up{job="jaeger"} == 0
      for: 5m
      labels:
        severity: warning
        component: jaeger
      annotations:
        summary: "Jaeger is down"
        description: "Jaeger tracing collection is not working."
        runbook: "https://backstage.local/docs/runbooks/jaeger-down"

    - alert: KialiDown
      expr: up{job="kiali"} == 0
      for: 5m
      labels:
        severity: warning
        component: kiali
      annotations:
        summary: "Kiali is down"
        description: "Kiali service mesh observability is not working."
        runbook: "https://backstage.local/docs/runbooks/kiali-down"

    - alert: PrometheusConfigReloadFailed
      expr: |
        prometheus_config_last_reload_successful == 0
      for: 5m
      labels:
        severity: warning
        component: prometheus
      annotations:
        summary: "Prometheus configuration reload failed"
        description: "Prometheus failed to reload its configuration."
        runbook: "https://backstage.local/docs/runbooks/prometheus-config-reload"

    - alert: PrometheusHighCardinalityMetrics
      expr: |
        prometheus_tsdb_symbol_table_size_bytes > 16000000
      for: 15m
      labels:
        severity: warning
        component: prometheus
      annotations:
        summary: "Prometheus high cardinality metrics detected"
        description: "Prometheus symbol table size is {{ $value }} bytes, indicating high cardinality metrics."
        runbook: "https://backstage.local/docs/runbooks/prometheus-high-cardinality"

  # Security and Compliance Alerts
  - name: security-alerts
    rules:
    - alert: mTLSConfigurationIssue
      expr: |
        sum(rate(istio_requests_total{security_policy="unknown"}[5m])) > 0
      for: 5m
      labels:
        severity: warning
        component: security
        security_type: mtls
      annotations:
        summary: "mTLS configuration issue detected"
        description: "Some requests are not using mTLS, check security policies."
        dashboard: "/d/security-dashboard"
        runbook: "https://backstage.local/docs/runbooks/mtls-configuration"

    - alert: UnauthorizedAPIAccess
      expr: |
        sum(rate(istio_requests_total{response_code="403"}[5m])) > 10
      for: 5m
      labels:
        severity: warning
        component: security
        security_type: authorization
      annotations:
        summary: "High rate of unauthorized API access"
        description: "{{ $value }} requests/sec are being denied with 403 status."
        dashboard: "/d/security-dashboard"
        runbook: "https://backstage.local/docs/runbooks/unauthorized-access"

    - alert: SuspiciousTrafficPattern
      expr: |
        rate(istio_requests_total[5m]) > 
        (avg_over_time(rate(istio_requests_total[5m])[1h:5m]) * 5)
      for: 10m
      labels:
        severity: warning
        component: security
        security_type: anomaly-detection
      annotations:
        summary: "Suspicious traffic pattern detected"
        description: "Request rate is 5x higher than normal, potential DDoS or abuse."
        dashboard: "/d/security-dashboard"
        runbook: "https://backstage.local/docs/runbooks/suspicious-traffic"