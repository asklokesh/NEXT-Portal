apiVersion: v1 kind: Secret metadata: name: alertmanager-main namespace: istio-system labels: app.kubernetes.io/component: alert-router app.kubernetes.io/instance: main app.kubernetes.io/name: alertmanager app.kubernetes.io/part-of: kube-prometheus app.kubernetes.io/version: 0.26.0 stringData: alertmanager.yml: | global: smtp_smarthost: 'smtp.gmail.com:587' smtp_from: 'backstage-alerts@company.com' smtp_auth_username: 'backstage-alerts@company.com' smtp_auth_password: 'app-specific-password' smtp_require_tls: true # Slack API URL - configured via secret slack_api_url: '{{ .slack_webhook_url }}' # PagerDuty integration key pagerduty_url: 'https://events.pagerduty.com/v2/enqueue' # Global resolve timeout resolve_timeout: 5m # Templating for notifications templates: - '/etc/alertmanager/templates/*.tmpl' # Main routing configuration route: group_by: ['cluster', 'alertname', 'service'] group_wait: 30s group_interval: 5m repeat_interval: 12h receiver: 'default' routes: # Critical alerts - immediate notification - match: severity: critical receiver: 'critical-alerts' group_wait: 10s group_interval: 2m repeat_interval: 5m continue: true # Service mesh specific alerts - match: component: service-mesh receiver: 'service-mesh-team' group_by: ['cluster', 'alertname', 'component', 'service'] continue: true # Disaster recovery alerts - match: component: disaster-recovery receiver: 'disaster-recovery-team' group_by: ['cluster', 'alertname', 'component', 'site'] continue: true # Security alerts - match: component: security receiver: 'security-team' group_by: ['cluster', 'alertname', 'security_type'] continue: true # Certificate expiry alerts - match: component: certificates receiver: 'infrastructure-team' group_by: ['cluster', 'certificate'] continue: true # SLA breach alerts - match: component: sla receiver: 'sla-alerts' group_by: ['cluster', 'sla_type'] continue: true # Observability stack alerts - match_re: component: '(prometheus|jaeger|kiali)' receiver: 'observability-team' continue: true # Circuit breaker alerts - match: component: circuit-breaker receiver: 'performance-team' group_by: ['cluster', 'alertname', 'cluster'] continue: true # Alert inhibition rules inhibit_rules: # Inhibit warning alerts when critical alerts are firing - source_match: severity: 'critical' target_match: severity: 'warning' equal: ['cluster', 'service', 'alertname'] # Inhibit individual service alerts when site is down - source_match: alertname: 'PrimarySiteDown' target_match_re: alertname: '(ServiceMesh.*|Circuit.*|SLA.*)' equal: ['cluster'] # Inhibit cert warnings when critical cert alerts are firing - source_match: alertname: 'CertificateExpiringCritical' target_match: alertname: 'CertificateExpiringWarning' equal: ['certificate'] # Receiver configurations receivers: # Default receiver for non-matched alerts - name: 'default' email_configs: - to: 'backstage-ops@company.com' subject: '[Backstage] {{ .GroupLabels.alertname }} - {{ .GroupLabels.cluster }}' body: | {{ range .Alerts }} Alert: {{ .Annotations.summary }} Description: {{ .Annotations.description }} Severity: {{ .Labels.severity }} Component: {{ .Labels.component }} Dashboard: {{ .Annotations.dashboard }} Runbook: {{ .Annotations.runbook }} {{ end }} # Critical alerts - multiple channels - name: 'critical-alerts' slack_configs: - api_url: '{{ .slack_webhook_url }}' channel: '#critical-alerts' color: 'danger' title: ' CRITICAL: {{ .GroupLabels.alertname }}' text: | {{ range .Alerts }} *Alert:* {{ .Annotations.summary }} *Description:* {{ .Annotations.description }} *Component:* {{ .Labels.component }} *Service:* {{ .Labels.service }} *Cluster:* {{ .Labels.cluster }} {{ if .Annotations.dashboard }}*Dashboard:* {{ .Annotations.dashboard }}{{ end }} {{ if .Annotations.runbook }}*Runbook:* {{ .Annotations.runbook }}{{ end }} {{ end }} send_resolved: true title_link: '{{ .Annotations.dashboard }}' pagerduty_configs: - routing_key: '{{ .pagerduty_service_key }}' severity: 'critical' description: '{{ .GroupLabels.alertname }} on {{ .GroupLabels.cluster }}' details: summary: '{{ range .Alerts }}{{ .Annotations.summary }}{{ end }}' component: '{{ .GroupLabels.component }}' service: '{{ .GroupLabels.service }}' cluster: '{{ .GroupLabels.cluster }}' email_configs: - to: 'backstage-oncall@company.com' subject: ' CRITICAL: {{ .GroupLabels.alertname }} - {{ .GroupLabels.cluster }}' headers: Priority: 'high' X-Priority: '1' body: | CRITICAL ALERT DETECTED {{ range .Alerts }} Alert: {{ .Annotations.summary }} Description: {{ .Annotations.description }} Severity: {{ .Labels.severity }} Component: {{ .Labels.component }} Service: {{ .Labels.service }} Cluster: {{ .Labels.cluster }} Time: {{ .StartsAt.Format "2006-01-02 15:04:05 UTC" }} {{ if .Annotations.dashboard }} Dashboard: {{ .Annotations.dashboard }} {{ end }} {{ if .Annotations.runbook }} Runbook: {{ .Annotations.runbook }} {{ end }} {{ end }} # Service mesh team alerts - name: 'service-mesh-team' slack_configs: - api_url: '{{ .slack_webhook_url }}' channel: '#service-mesh' color: '{{ if eq .Status "firing" }}warning{{ else }}good{{ end }}' title: '{{ if eq .Status "firing" }}{{ else }}{{ end }} Service Mesh: {{ .GroupLabels.alertname }}' text: | {{ range .Alerts }} *Service:* {{ .Labels.service }} *Component:* {{ .Labels.component }} *Description:* {{ .Annotations.description }} {{ if .Annotations.dashboard }}*Dashboard:* {{ .Annotations.dashboard }}{{ end }} {{ end }} send_resolved: true email_configs: - to: 'service-mesh-team@company.com' subject: '[Service Mesh] {{ .GroupLabels.alertname }} - {{ .GroupLabels.service }}' # Disaster recovery team alerts - name: 'disaster-recovery-team' slack_configs: - api_url: '{{ .slack_webhook_url }}' channel: '#disaster-recovery' color: 'danger' title: ' DR Alert: {{ .GroupLabels.alertname }}' text: | {{ range .Alerts }} *Site:* {{ .Labels.site }} *Component:* {{ .Labels.component }} *Description:* {{ .Annotations.description }} {{ if .Annotations.dashboard }}*Dashboard:* {{ .Annotations.dashboard }}{{ end }} {{ if .Annotations.runbook }}*Runbook:* {{ .Annotations.runbook }}{{ end }} {{ end }} send_resolved: true pagerduty_configs: - routing_key: '{{ .pagerduty_dr_key }}' severity: '{{ .Labels.severity }}' description: 'DR: {{ .GroupLabels.alertname }} - {{ .Labels.site }}' # Security team alerts - name: 'security-team' slack_configs: - api_url: '{{ .slack_webhook_url }}' channel: '#security-alerts' color: 'danger' title: ' Security Alert: {{ .GroupLabels.alertname }}' text: | {{ range .Alerts }} *Security Type:* {{ .Labels.security_type }} *Description:* {{ .Annotations.description }} *Component:* {{ .Labels.component }} {{ if .Annotations.dashboard }}*Dashboard:* {{ .Annotations.dashboard }}{{ end }} {{ end }} send_resolved: true email_configs: - to: 'security-team@company.com' subject: '[SECURITY] {{ .GroupLabels.alertname }} - {{ .Labels.security_type }}' # Infrastructure team alerts - name: 'infrastructure-team' slack_configs: - api_url: '{{ .slack_webhook_url }}' channel: '#infrastructure' color: '{{ if eq .Labels.severity "critical" }}danger{{ else }}warning{{ end }}' title: ' Infrastructure: {{ .GroupLabels.alertname }}' text: | {{ range .Alerts }} {{ if .Labels.certificate }}*Certificate:* {{ .Labels.certificate }}{{ end }} *Description:* {{ .Annotations.description }} *Severity:* {{ .Labels.severity }} {{ if .Annotations.runbook }}*Runbook:* {{ .Annotations.runbook }}{{ end }} {{ end }} send_resolved: true # SLA alerts - business stakeholders - name: 'sla-alerts' slack_configs: - api_url: '{{ .slack_webhook_url }}' channel: '#sla-monitoring' color: 'danger' title: ' SLA Breach: {{ .GroupLabels.alertname }}' text: | {{ range .Alerts }} *SLA Type:* {{ .Labels.sla_type }} *Description:* {{ .Annotations.description }} {{ if .Annotations.dashboard }}*Dashboard:* {{ .Annotations.dashboard }}{{ end }} {{ end }} send_resolved: true email_configs: - to: 'business-stakeholders@company.com' subject: '[SLA BREACH] {{ .GroupLabels.alertname }} - {{ .Labels.sla_type }}' # Observability team alerts - name: 'observability-team' slack_configs: - api_url: '{{ .slack_webhook_url }}' channel: '#observability' color: 'warning' title: ' Observability: {{ .GroupLabels.alertname }}' text: | {{ range .Alerts }} *Component:* {{ .Labels.component }} *Description:* {{ .Annotations.description }} {{ if .Annotations.runbook }}*Runbook:* {{ .Annotations.runbook }}{{ end }} {{ end }} send_resolved: true # Performance team alerts - name: 'performance-team' slack_configs: - api_url: '{{ .slack_webhook_url }}' channel: '#performance' color: 'warning' title: ' Performance: {{ .GroupLabels.alertname }}' text: | {{ range .Alerts }} {{ if .Labels.cluster }}*Cluster:* {{ .Labels.cluster }}{{ end }} *Description:* {{ .Annotations.description }} {{ if .Annotations.dashboard }}*Dashboard:* {{ .Annotations.dashboard }}{{ end }} {{ end }} send_resolved: true --- apiVersion: v1 kind: ConfigMap metadata: name: alertmanager-templates namespace: istio-system data: # Custom templates for notifications default.tmpl: | {{ define "__subject" }} [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .GroupLabels.SortedPairs.Values | join " " }} {{ if gt (len .CommonLabels) (len .GroupLabels) }}({{ with .CommonLabels.Remove .GroupLabels.Names }}{{ .Values | join " " }}{{ end }}){{ end }} {{ end }} {{ define "__description" }}{{ end }} {{ define "__text_alert_list" }}{{ range . }} Labels: {{ range .Labels.SortedPairs }} - {{ .Name }} = {{ .Value }} {{ end }} Annotations: {{ range .Annotations.SortedPairs }} - {{ .Name }} = {{ .Value }} {{ end }} Source: {{ .GeneratorURL }} {{ end }}{{ end }} {{ define "slack.default.title" }} {{ range .Alerts }}{{ .Annotations.summary }}{{ end }} {{ end }} {{ define "slack.default.text" }} {{ if gt (len .Alerts.Firing) 0 }} **Firing:** {{ range .Alerts.Firing }}{{ template "__text_alert_list" . }}{{ end }} {{ end }} {{ if gt (len .Alerts.Resolved) 0 }} **Resolved:** {{ range .Alerts.Resolved }}{{ template "__text_alert_list" . }}{{ end }} {{ end }} {{ end }} backstage.tmpl: | {{ define "backstage.title" }} {{ .Status | title }} - {{ .GroupLabels.alertname }}{{ if .GroupLabels.cluster }} on {{ .GroupLabels.cluster }}{{ end }} {{ end }} {{ define "backstage.text" }} {{ if gt (len .Alerts.Firing) 0 }} **Active Alerts:** {{ range .Alerts.Firing }} • **{{ .Annotations.summary }}** - *Component:* {{ .Labels.component }} {{ if .Labels.service }}- *Service:* {{ .Labels.service }}{{ end }} {{ if .Labels.severity }}- *Severity:* {{ .Labels.severity }}{{ end }} - *Description:* {{ .Annotations.description }} {{ if .Annotations.dashboard }}- *Dashboard:* {{ .Annotations.dashboard }}{{ end }} {{ if .Annotations.runbook }}- *Runbook:* {{ .Annotations.runbook }}{{ end }} {{ end }} {{ end }} {{ if gt (len .Alerts.Resolved) 0 }} **Resolved Alerts:** {{ range .Alerts.Resolved }} • **{{ .Annotations.summary }}** ({{ .Labels.component }}) {{ end }} {{ end }} {{ end }} {{ define "email.backstage.subject" }} {{ template "__subject" . }} {{ end }} {{ define "email.backstage.html" }} <!DOCTYPE html> <html> <head> <meta charset="UTF-8"> <style> body { font-family: Arial, sans-serif; margin: 20px; } .header { background-color: #f8f9fa; padding: 15px; border-radius: 5px; margin-bottom: 20px; } .alert { margin-bottom: 15px; padding: 15px; border-radius: 5px; } .critical { background-color: #f8d7da; border: 1px solid #f5c6cb; } .warning { background-color: #fff3cd; border: 1px solid #ffeaa7; } .resolved { background-color: #d4edda; border: 1px solid #c3e6cb; } .label { font-weight: bold; } .value { margin-left: 10px; } .footer { margin-top: 20px; padding-top: 20px; border-top: 1px solid #dee2e6; color: #6c757d; font-size: 12px; } </style> </head> <body> <div class="header"> <h2>Backstage Alert Notification</h2> <p><strong>Status:</strong> {{ .Status | title }}</p> <p><strong>Timestamp:</strong> {{ .CommonAnnotations.timestamp }}</p> </div> {{ if gt (len .Alerts.Firing) 0 }} <h3> Active Alerts</h3> {{ range .Alerts.Firing }} <div class="alert {{ if eq .Labels.severity "critical" }}critical{{ else }}warning{{ end }}"> <h4>{{ .Annotations.summary }}</h4> <p><strong>Description:</strong> {{ .Annotations.description }}</p> <p><strong>Component:</strong> {{ .Labels.component }}</p> {{ if .Labels.service }}<p><strong>Service:</strong> {{ .Labels.service }}</p>{{ end }} {{ if .Labels.severity }}<p><strong>Severity:</strong> {{ .Labels.severity }}</p>{{ end }} {{ if .Annotations.dashboard }}<p><strong>Dashboard:</strong> <a href="{{ .Annotations.dashboard }}">View Dashboard</a></p>{{ end }} {{ if .Annotations.runbook }}<p><strong>Runbook:</strong> <a href="{{ .Annotations.runbook }}">View Runbook</a></p>{{ end }} </div> {{ end }} {{ end }} {{ if gt (len .Alerts.Resolved) 0 }} <h3> Resolved Alerts</h3> {{ range .Alerts.Resolved }} <div class="alert resolved"> <h4>{{ .Annotations.summary }}</h4> <p><strong>Component:</strong> {{ .Labels.component }}</p> {{ if .Labels.service }}<p><strong>Service:</strong> {{ .Labels.service }}</p>{{ end }} </div> {{ end }} {{ end }} <div class="footer"> <p>This notification was generated by the Backstage monitoring system.</p> <p>For support, contact the platform team at backstage-support@company.com</p> </div> </body> </html> {{ end }}